//
//  ListTable.swift
//  AllView
//
//  Created by –°—Ç–µ–ø–∞–Ω on 16.01.2023.
//

import UIKit

class ListTable: UITableViewController {
    
    var deathEmoji: Emoji = Emoji(emoji: "‚ò†Ô∏è", name: "Death", explain: "Bones", isLike: false)
    
    var objects = [
        Emoji(emoji: "üí©", name: "Poop", explain: "Nasty", isLike: false),
        Emoji(emoji: "ü§°", name: "Clown", explain: "Make fun", isLike: false),
        Emoji(emoji: "üëΩ", name: "UFO", explain: "Zone 51", isLike: false)

    ]
    
    var num = 0
    var num2 = 0

    override func viewDidLoad() {
        super.viewDidLoad()

        // Uncomment the following line to preserve selection between presentations
        // self.clearsSelectionOnViewWillAppear = false

        // Uncomment the following line to display an Edit button in the navigation bar for this view controller.
        self.title = "List"
        
        self.navigationItem.leftBarButtonItem = self.editButtonItem
        self.navigationItem.leftBarButtonItem?.tintColor = .systemPink
        
        self.tableView.rowHeight = 75   /// –≤ –≤—ã—Å–æ—Ç—É –∫–∞–∂–¥—ã–π —Å—Ç–æ–ª–±–µ—Ü

    }

    // MARK: - Table view data source

    ///     –ö–û–õ-–í–û –°–ï–ö–¶–ò–ô
    override func numberOfSections(in tableView: UITableView) -> Int {
        // #warning Incomplete implementation, return the number of sections
        return 1
    }

    ///     –°–û–ó–î–ê–ï–¢ –ö–û–õ-–í–û –†–Ø–î–û–í –í –û–î–ù–û–ô –°–ï–ö–¶–ò–ò
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        // #warning Incomplete implementation, return the number of rows
        return objects.count
    }

    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "tableSmileID", for: indexPath) as! EmojiCellTableViewCell

        let object = objects[indexPath.row]
        cell.set(obj: object)
        return cell
    }
    
    ///     –ß–µ—Ä–µ–¥—É—é—Ç—Å—è –£–î–ê–õ–ï–ù–ò–ï –∏ –í–°–¢–ê–í–ö–ê
    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCell.EditingStyle {
        
        if indexPath.row % 2 == 0 { // –Ω—É–º–µ—Ä–∞—Ü–∏—è indexPath –∏–¥–µ—Ç —Å --> 0 –∫–∞–∫ –º–∞—Å—Å–∏–≤ 0 % 2 = 0; 1 % 2 = 1; 2 % 2 = 0 --> (0, 1, 0) -> (insert delete insert)
            return .insert
        } else {
            return .delete
        }
    }
    
    ///  –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏ –∫–æ–ª-–≤–æ —Ä–∞–∑ –∫–ª–∏–∫–æ–≤ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ DELETE –∏ INSERT
    /// —Ç–∞–∫–∂–µ —É–¥–∞–ª—è–µ—Ç –∏ –≤—Å—Ç–∞–≤–ª—è–µ—Ç
    override func tableView(_ tableView: UITableView, commit editingStyle: UITableViewCell.EditingStyle, forRowAt indexPath: IndexPath) {
        
        if editingStyle == .delete {
            num += 1
            print("delete (\(num))")
            objects.remove(at: indexPath.row)
            tableView.deleteRows(at: [indexPath], with: .fade)
        } else {
            num2 += 1
            print("insert (\(num2))")
            objects.insert(deathEmoji, at: indexPath.row)
            tableView.insertRows(at: [indexPath], with: .fade)
        }
        
    }
    
    override func tableView(_ tableView: UITableView, canMoveRowAt indexPath: IndexPath) -> Bool {
        true
    }
    
    /// –ü–ï–†–ï–ú–ï–©–ï–ù–ò–ï
    override func tableView(_ tableView: UITableView, moveRowAt sourceIndexPath: IndexPath, to destinationIndexPath: IndexPath) {
        let move = objects.remove(at: sourceIndexPath.row)
        objects.insert(move, at: destinationIndexPath.row)
        tableView.reloadData()
    }
    
}
